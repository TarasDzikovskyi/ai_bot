/**
 * Sets up the command handlers for the bot
 * @param {Object} bot - The Telegram bot instance
 */
function setupCommandHandlers(bot) {
    // Handle /start command
    bot.onText(/\/start/, (msg) => {
        const chatId = msg.chat.id;
        bot.sendMessage(chatId, '–ü—Ä–∏–≤—ñ—Ç! –û–±–µ—Ä–∏ –¥—ñ—é:', {
            reply_markup: {
                keyboard: [
                    ['üîä –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –∞—É–¥—ñ–æ', 'üìù –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ç–µ–∫—Å—Ç'],
                    ['üì¶ –ü—Ä–æ—Ä–∞—Ö—É–≤–∞—Ç–∏ –≤–∞–Ω—Ç–∞–∂', '‚ÑπÔ∏è –î–æ–ø–æ–º–æ–≥–∞'],
                    ['üèôÔ∏è –°–ø–∏—Å–æ–∫ –º—ñ—Å—Ç', 'üö¢ –°–ø–∏—Å–æ–∫ –ø–æ—Ä—Ç—ñ–≤']
                ],
                resize_keyboard: true,
                one_time_keyboard: false
            }
        });
    });


    bot.onText(/\/search/, (msg) => {
        const chatId = msg.chat.id;
        bot.sendMessage(chatId, '–ù–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ—à—É–∫—É:', {
            reply_markup: {
                inline_keyboard: [[
                    {
                        text: 'üîç –ü–æ—à—É–∫ –ø–æ—Ä—Ç—É',
                        switch_inline_query_current_chat: 'port '
                    },
                    {
                        text: 'üîç –ü–æ—à—É–∫ –º—ñ—Å—Ç–∞',
                        switch_inline_query_current_chat: 'city '
                    }
                ]]
            }
        });
    });
}

module.exports = {
    setupCommandHandlers
};